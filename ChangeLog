2018-03-12 Trevor Hastie <hastie@stanford.edu> version 2.0-16
	* Additional fixes to mortran; current mortran src is in
	inst/mortran
	* Mortran uses double precision, and variables are initialized to
	avoid -Wall warnings
	* cleaned up repeat code in CV by creating a utility function
2018-01-31 Trevor Hastie <hastie@stanford.edu> version 2.0-15
	* Naras fixed up the mortran so that generic fortran compiler can
	run without any configure
2017-09-21 Trevor Hastie <hastie@stanford.edu> version 2.0-13
	* Cleaned up some bugs to do with exact prediction
	* newoffset created problems all over - fixed these
2017-09-05 Trevor Hastie <hastie@stanford.edu> version 2.0-11
	* Added protection with exact=TRUE calls to coef and predict. See
	help file for more details
2017-05-05 Trevor Hastie <hastie@stanford.edu> version 2.0-10
	* Two iterations to fix to fix native fortran registration.
2017-04-25 Trevor Hastie <hastie@stanford.edu> version 2.0-8
	* included native registration of fortran
2016-08-25 Trevor Hastie <hastie@stanford.edu> version 2.0-7
	* constant y blows up elnet; error trap included
	* fixed lambda.interp which was returning NaNs under degenerate circumstances.
2016-03-24 Trevor Hastie <hastie@stanford.edu> version 2.0-6
	* added some code to extract time and status gracefully from a Surv object
2016-02-21 Trevor Hastie <hastie@stanford.edu> version 2.0-3
	* changed the usage of predict and coef with exact=TRUE. The user is strongly encouraged to supply the original x and y values, as well as any other data such as weights that were used in the original fit.
2015-04-07 Trevor Hastie <hastie@stanford.edu> version 2.0-1
	* Major upgrade to CV; let each model use its own lambdas, then predict at original set.
	* fixed some minor bugs
2014-07-30  Trevor Hastie <hastie@stanford.edu> version 1.9-9
	* fixed subsetting bug in lognet when some weights are zero and x is sparse
2014-05-23  Trevor Hastie <hastie@stanford.edu> version 1.9-8
	* fixed bug in multivariate response model (uninitialized variable), leading to valgrind issues
	* fixed issue with multinomial response matrix and zeros
	* Added a link to a glmnet vignette
2014-04-02  Trevor Hastie <hastie@stanford.edu> version 1.9-6
	* fixed bug in predict.glmnet, predict.multnet and predict.coxnet, when s= argument is used with a vector of values. It was not doing the matrix multiply correctly
	* changed documentation of glmnet to explain logistic response matrix
2013-08-02   Trevor Hastie <hastie@stanford.edu> version 1.9-5
	* added parallel capabilities, and fixed some minor bugs
2013-03-01   Trevor Hastie <hastie@stanford.edu> version 1.9-3
	* added intercept option
2013-02-10   Trevor Hastie <hastie@stanford.edu> version 1.9-1
	* added upper and lower bounds for coefficients
	* added glmnet.control for setting sytems parameters
	* fixed serious bug in coxnet
2012-12-31   Trevor Hastie <hastie@stanford.edu> version 1.8-5
	* added exact=TRUE option for prediction and coef functions
2012-7-01   Trevor Hastie <hastie@stanford.edu>

	Major new release
	* added mgaussian family for multivariate response
	* added grouped option for multinomial family

2012-4-26   Trevor Hastie <hastie@stanford.edu>
	* nasty bug fixed in fortran - removed reference to dble
	* check class of newx and make dgCmatrix if sparse
2011-8-15   Trevor Hastie <hastie@stanford.edu>
	* lognet added a classnames component to the object
	* predict.lognet(type="class") now returns a character vector/matrix
2011-6-23   Trevor Hastie <hastie@stanford.edu>
	* predict.glmnet : fixed bug with type="nonzero"
	* glmnet: Now x can inherit from "sparseMatrix" rather than the very specific "dgCMatrix", and this will
	   trigger sparse mode for glmnet


2010-11-01  Trevor Hastie  <hastie@stanford.edu>

	* glmnet.Rd (lambda.min) : changed value to 0.01 if nobs<nvars
	  (lambda) added warnings to avoid single value
	  (lambda.min): renamed it lamda.min.ratio
	* glmnet (lambda.min) : changed	value to 0.01 if nobs<nvars
	    (HessianExact) : changed the sense (it was wrong)
	   (lambda.min): renamed it lamda.min.ratio # this allows it to be called lambda.min in a call though
	* predict.cv.glmnet (new function) : makes predictions directly from the saved glmnet object on the cv object
	* coef.cv.glmnet (new function) : as above
	* predict.cv.glmnet.Rd : help functions for the above
	* cv.glmnet : insert drop(y) to avoid 1 column matrices
	    now include a glmnet.fit object for later predictions
	* nonzeroCoef : added a special case for a single variable in x; it was dying on this
	* deviance.glmnet : included
	* deviance.glmnet.Rd : included


2010-06-26 Trevor Hastie <hastie@stanford.edu>
	###	Note that this starts from glmnet_1.4

